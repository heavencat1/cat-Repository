数据类型:
	数值型{byte[1]; short[2]; int[4]; long[8]; float[4]; double[8]}注:byte范围（-128-127）；
	字符型{char[2]}
	布尔型{boolean[1]}
	不同数据类型进行计算时，精度小的类型会自动转换成精度大的数据类型；

	强制类型转换：将容量大的数据类型转换成容量小的数据类型，使用时加上强制转换符(),但可能造成精度降低或溢出；
		        int i = (int)1.1;
	字符串类型和基本数据类型转换：
		基本数据类型转换成字符串:
			int a = 10;
			String b = a +"";
		字符串转换成基本数据类型:
		    String s5 = "123";
            int num1 = Integer.parseInt(s5);
            double num2 = Double.parseDouble(s5);
            float num3 = Float.parseFloat(s5);
            long num4 = Long.parseLong(s5);
            byte num5 = Byte.parseByte(s5);
            boolean b = Boolean.parseBoolean("true");
            short num6 = Short.parseShort(s5);
            注：String 类型转成char型->含义是把字符串的第一个字符得到；
            s5.charAt(0);


 算数运算符:
     正号，负号，加减乘除；
     取模(取余)：a % b ； 注:公式：a%b=a - a/b*b;(先除后乘)
     自增(前)：先运算，后取值   自增(后)：先取值，后运算；


 关系运算符:
      关系运算符的结果是布尔值，所以可以将结果赋给一个布尔值；
      boolean flag = a < b;
      关系运算符组成的表达式叫"关系表达式";

 逻辑运算符:
      1、短路与 &&, 短路或 ||, 取反 !;
      2、逻辑与 & , 逻辑或 | , 逻辑异或 ^；

      短路与/或：如果第一个条件为假/真，后面的条件不再判断；
      逻辑与/或：如果第一个条件为假/真，后面的条件还要判断；



 赋值运算符:
      +=,  -=,  *=,  /=,  %=;
      a += b;  [等价 a = a + b];

 三元运算符:
      条件表达式 ? 表达式1 : 表达式2；
      运算规则：如果条件表达式为 true，运算后的结果是表达式1；如果条件表达式为 false, 运算后的结果是表达式2；
      int c = a>b ? a++ : b++;


 Scanner:
      Scanner input = new Scanner(System.in);

              System.out.print("请输入名字:");
              String name = input.next();

              System.out.print("请输入年龄:");
              int age = input.nextInt();

              System.out.print("请输入工资:");
              double score = input.nextDouble();

              System.out.println("名字是:"+name+",年龄是:"+age+",工资是:"+score);

        接收字符串：
              char gender = scanner.next().charAt(0);

 原码，反码，补码:
      对于有符号的而言:
            1、二进制的最高位是符号位：0表示正数，1表示负数；
            2、正数的原码，补码，反码都一样（三码合一）；
            3、负数的反码=它的原码符号不变，其他位取反；
            4、负数的补码=它的反码+1,负数的反码=它的补码-1；
            5、0的反码，补码都是0；
            6、Java没有无符号数，换言之，Java中的数都是有符号的；
            7、在计算机运算的时候，都是以补码的方式来运算的；
            8、当我们看运算结果的时候，要看原码；



 位运算符:
      Java中有7个位运算（&,  |,  ^,  ~,  >>,  <<,  >>>）

      按位与 & :两位全为1，结果为1，否则为0；
      按位或 | :两位只要有一位为1，结果为1，否则为0；
      按位异或 ^ : 两位不一样，结果为1，否则为0；
      按位取反 ~ : 取反；

      算数右移 >> : 低位溢出，符号位不变，并用符号位补溢出的高位
      算数左移 << : 符号位不变，低位补0
      逻辑右移 >>> : 也叫无符号右移，运算规则是低位溢出，高位补0；


控制结构:


   switch:
          1、表达式数据类型，应和case后的常量类型一致，或者是可以相互转换或可以比较的；
          2、switch中表达式的返回值必须是（byte,short,int,char,enum[枚举],String）
          3、case子句中的值只能是常量或常量表达式，不能是变量；
          4、default字句是可选的,case语句下可以没有语句，这会穿透；


   break:

        标签label---标签，语句块，可以自由命名；
        label:{  }

   return:
        使用在方法中，表示跳出所在的方法；如果放在main方法中，会跳出程序；












