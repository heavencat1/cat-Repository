数据类型:
	数值型{byte[1]; short[2]; int[4]; long[8]; float[4]; double[8]}注:byte范围（-128-127）；
	字符型{char[2]}
	布尔型{boolean[1]}
	不同数据类型进行计算时，精度小的类型会自动转换成精度大的数据类型；

	强制类型转换：将容量大的数据类型转换成容量小的数据类型，使用时加上强制转换符(),但可能造成精度降低或溢出；
		        int i = (int)1.1;
	字符串类型和基本数据类型转换：
		基本数据类型转换成字符串:
			int a = 10;
			String b = a +"";
		字符串转换成基本数据类型:
		    String s5 = "123";
            int num1 = Integer.parseInt(s5);
            double num2 = Double.parseDouble(s5);
            float num3 = Float.parseFloat(s5);
            long num4 = Long.parseLong(s5);
            byte num5 = Byte.parseByte(s5);
            boolean b = Boolean.parseBoolean("true");
            short num6 = Short.parseShort(s5);
            注：String 类型转成char型->含义是把字符串的第一个字符得到；
            s5.charAt(0);


 算数运算符:
     正号，负号，加减乘除；
     取模(取余)：a % b ； 注:公式：a%b=a - a/b*b;(先除后乘)
     自增(前)：先运算，后取值   自增(后)：先取值，后运算；


 关系运算符:
      关系运算符的结果是布尔值，所以可以将结果赋给一个布尔值；
      boolean flag = a < b;
      关系运算符组成的表达式叫"关系表达式";

 逻辑运算符:
      1、短路与 &&, 短路或 ||, 取反 !;
      2、逻辑与 & , 逻辑或 | , 逻辑异或 ^；

      短路与/或：如果第一个条件为假/真，后面的条件不再判断；
      逻辑与/或：如果第一个条件为假/真，后面的条件还要判断；



 赋值运算符:
      +=,  -=,  *=,  /=,  %=;
      a += b;  [等价 a = a + b];

 三元运算符:
      条件表达式 ? 表达式1 : 表达式2；
      运算规则：如果条件表达式为 true，运算后的结果是表达式1；如果条件表达式为 false, 运算后的结果是表达式2；
      int c = a>b ? a++ : b++;





